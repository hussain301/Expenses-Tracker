{
  "version": 3,
  "sources": [
    "components/Expenses/card.js",
    "components/Expenses/ExpensesFilter.js",
    "components/Expenses/ExpenseDate.js",
    "components/Expenses/ExpenseItem.js",
    "components/Expenses/expensesList.js",
    "components/Chart/ChartBar.js",
    "components/Chart/Chart.js",
    "components/Expenses/ExpensesChart.js",
    "components/Expenses/Expenses.js",
    "components/Expenses/NewExpense/ExpenseForm.js",
    "components/Expenses/NewExpense/NewExpense.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "Card",
    "props",
    "ClassNme",
    "className",
    "children",
    "ExpensesFilter",
    "value",
    "selected",
    "onChange",
    "e",
    "onFiltered",
    "target",
    "ExpenseDate",
    "month",
    "date",
    "toLocaleString",
    "year",
    "getFullYear",
    "day",
    "ExpenseItem",
    "title",
    "amount",
    "ExpensesList",
    "item",
    "length",
    "map",
    "exp",
    "id",
    "CharBar",
    "fillHeight",
    "maxValue",
    "Math",
    "round",
    "style",
    "height",
    "label",
    "Chart",
    "dataPoints",
    "totalValue",
    "max",
    "data",
    "ExpensesChart",
    "chartDataPoints",
    "expenses",
    "expense",
    "getMonth",
    "Expenses",
    "useState",
    "filteredYear",
    "setFilteredYear",
    "filteredExpense",
    "filter",
    "toString",
    "selectedYear",
    "console",
    "log",
    "ExpenseForm",
    "enteredTitle",
    "setEnteredTitle",
    "enteredAmount",
    "setEnteredAmount",
    "enteredDate",
    "setEnteredDate",
    "onSubmit",
    "preventDefault",
    "exspense",
    "Date",
    "onSubmitBtn",
    "htmlFor",
    "type",
    "min",
    "step",
    "NewExpense",
    "exspenseData",
    "newExspenseData",
    "random",
    "onAddExspense",
    "DUMMY_DATA",
    "App",
    "setExpenses",
    "expenseData",
    "prevExp",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.6cd11353.chunk.js",
  "sourcesContent": [
    "import \"./Card.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const ClassNme = `card ${props.className}`;\r\n  return <div className={ClassNme}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n",
    "import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropDownChangeHandler = (e) => {\n    props.onFiltered(e.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value=\"2025\">2025</option>\n          <option value=\"2024\">2024</option>\n          <option value=\"2023\">2023</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n",
    "import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-Us\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-Us\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n",
    "import React from \"react\";\r\nimport Card from \"./card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n      <div className=\"expense-item__price\">{props.amount}</div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n",
    "import React from \"react\";\r\n\r\nimport \"./expensesList.css\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.item.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback \">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.item.map((exp) => (\r\n        <ExpenseItem\r\n          key={exp.id}\r\n          amount={exp.amount}\r\n          title={exp.title}\r\n          date={exp.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n",
    "import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst CharBar = (props) => {\r\n  let fillHeight = \"0%\";\r\n  if (props.maxValue > 0)\r\n    fillHeight = Math.round((props.value * 100) / props.maxValue) + \"%\";\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: fillHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharBar;\r\n",
    "import React from \"react\";\r\n\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const maxValue = props.dataPoints.map((exp) => exp.value);\r\n  const totalValue = Math.max(...maxValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((data) => (\r\n        <ChartBar\r\n          value={data.value}\r\n          maxValue={totalValue}\r\n          key={data.label}\r\n          label={data.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n",
    "import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const label = expense.date.getMonth();\r\n    chartDataPoints[label].value += expense.amount;\r\n  }\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={chartDataPoints} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesChart;\r\n",
    "import React, { useState } from \"react\";\r\n\r\nimport \"./Expenses.css\";\r\nimport Card from \"./card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./expensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(selectedYear);\r\n  };\r\n\r\n  const filteredExpense = props.item.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesChart expenses={filteredExpense} />\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFiltered={filterChangeHandler}\r\n        />\r\n        <ExpensesList item={filteredExpense} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n",
    "import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const setEnteredTitleHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  const setEnteredAmountHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n\r\n  const setEnteredDateHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const exspenseData = (e) => {\r\n    e.preventDefault();\r\n    if (!enteredDate || !enteredTitle || !enteredAmount) return;\r\n    const exspense = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSubmitBtn(exspense);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={exspenseData}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={setEnteredTitleHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Amount</label>\r\n          <input\r\n            value={enteredAmount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={setEnteredAmountHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Date</label>\r\n          <input\r\n            value={enteredDate}\r\n            type=\"date\"\r\n            max=\"2025-09-20\"\r\n            min=\"2019-04-22\"\r\n            onChange={setEnteredDateHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n",
    "import React from \"react\";\r\n\r\nimport \"./NewExpense.css\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const exspenseFormDataHandler = (exspenseData) => {\r\n    const newExspenseData = {\r\n      ...exspenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExspense(newExspenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSubmitBtn={exspenseFormDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n",
    "import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/Expenses/NewExpense/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addExspenseHandler = (expenseData) => {\n    setExpenses((prevExp) => {\n      return [expenseData, ...prevExp];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpenses onAddExspense={addExspenseHandler} />\n      <Expenses item={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n",
    "import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"
  ],
  "sourceRoot": ""
}
